@page "/admin/categories"
@inject IServiciulCategorii ServiciulCategorii
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<h3>Categorii</h3>

<div class="header">
	<div class="col">Nume</div>
	<div class="col">Url</div>
	<div class="col">Vizibil</div>
	<div class="col"></div>

</div>

@foreach (var category in ServiciulCategorii.AdminCategories)
{
    @if (category.Editing)
    {
        <EditForm Model="editingCategory" OnSubmit="UpdateCategory">
            <div class="row mb-2">
                <div class="col">
                    <InputText @bind-Value="editingCategory.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <InputText @bind-Value="editingCategory.Url" class="form-control"></InputText>
                </div>
                <div class="col col-visible">
                    <InputCheckbox @bind-Value="editingCategory.Visible" style="transform: scale(1.5,1.5)"></InputCheckbox>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i> Actualizeaza
                    </button>
                    <button class="btn btn-secondary" @onclick="CancelEditing">
                        <i class="oi oi-circle-x"></i> Anuleaza
                    </button>
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="row mb-2">
            <div class="col">
                <strong>@category.Name</strong>
            </div>
            <div class="col">
                <a href="@category.Url">@category.Url</a>
            </div>
            <div class="col col-visible">
                <span>@(category.Visible ? "✔️" : "")</span>
            </div>
            <div class="col">
                <button class="btn btn-primary" @onclick="(() => EditCategory(category))">
                    <i class="oi oi-pencil"></i> Editeaza
                </button>
                <button class="btn btn-danger" @onclick="(() => DeleteCategory(category.Id))">
                    <i class="oi oi-trash"></i> Sterge
                </button>
            </div>
        </div>
    }
}
<button class="btn btn-primary mb-2" @onclick="CreateNewCategory">
    <i class="oi oi-plus"></i> Adauga o noua categorie
</button>



@code {
	Category editingCategory = null;

	protected override async Task OnInitializedAsync()
	{
		await ServiciulCategorii.GetAdminCategories();
		ServiciulCategorii.OnChange += StateHasChanged;
	}

	public void Dispose()
	{
		ServiciulCategorii.OnChange -= StateHasChanged;
	}

	private void CreateNewCategory()
	{
		editingCategory = ServiciulCategorii.CreateNewCategory();
	}

	private void EditCategory(Category category)
	{
		category.Editing = true;
		editingCategory = category;
	}

	private async Task UpdateCategory()
	{
		if (editingCategory.IsNew)
			await ServiciulCategorii.AddCategory(editingCategory);
		else
			await ServiciulCategorii.UpdateCategory(editingCategory);
		editingCategory = new Category();
	}

	private async Task CancelEditing()
	{
		editingCategory = new Category();
		await ServiciulCategorii.GetAdminCategories();
	}

	private async Task DeleteCategory(int id)
	{
		await ServiciulCategorii.DeleteCategory(id);
	}



}
