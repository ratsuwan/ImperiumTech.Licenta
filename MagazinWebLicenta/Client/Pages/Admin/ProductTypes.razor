@page "/admin/product-types"
@inject IProductTypeService ProductTypeService
@implements IDisposable
@attribute [Authorize(Roles ="Admin")]


<h3>Tipuri de produse</h3>

<button class="btn btn-primary add-button" @onclick="CreateNewProductType">
    <i class="oi oi-plus"></i> Adauga un nou tip de produse
</button>

@foreach (var productType in ProductTypeService.ProductTypes)
{
    @if (productType.Editing)
    {
        <EditForm Model="editingProductType" OnSubmit="UpdateProductType">
            <div class="product-type-row">
                <div class="col">
                    <InputText @bind-Value="editingProductType.Name" class="form-control"></InputText>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-primary">
                        <i class="oi oi-cloud-upload"></i> Actualizeaza
                    </button
                     
                </div>
            </div>
        </EditForm>
    }
    else
    {
        <div class="product-type-row">
            <div class="product-type-name">
                @productType.Name
            </div>
            <div>
                <button class="edit-button" @onclick="@(() => EditProductType(productType))">
                    <i class="oi oi-pencil"></i> Editeaza
                </button>
            </div>
        </div>
    }
}




@code {
	ProductType editingProductType = null;

	protected override async Task OnInitializedAsync()
	{
		await ProductTypeService.GetProductTypes();
		ProductTypeService.OnChange += StateHasChanged;
	}
	public void Dispose()
	{
		ProductTypeService.OnChange -= StateHasChanged;
	}

	private void EditProductType(ProductType productType)
	{
		productType.Editing = true;
		editingProductType = productType;
	}

	private void CreateNewProductType()
	{
		editingProductType = ProductTypeService.CreateNewProductType();
	}

	private async Task UpdateProductType()
	{
		if (editingProductType.IsNew)
			await ProductTypeService.AddProductType(editingProductType);
		else
			await ProductTypeService.UpdateProductType(editingProductType);

		editingProductType = new ProductType();
	}

   
}
